version: '3.8'

services:
  # Frontend - Vue.js with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - evaluation-network

  # Backend - Flask with Gunicorn
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "5001:5001"
    depends_on:
      - db
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://eval_user:${MYSQL_PASSWORD:-password123}@db:3306/evaluation
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-secret-key-change-in-production}
      - ENABLE_TRACING=true
      - JAEGER_HOST=jaeger
    networks:
      - evaluation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database - MySQL 8.0
  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: evaluation
      MYSQL_USER: eval_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    networks:
      - evaluation-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10

  # Observability - Jaeger for tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Jaeger UI
      - "6831:6831/udp"  # Jaeger agent
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - evaluation-network

volumes:
  mysql_data:

networks:
  evaluation-network:
    driver: bridge